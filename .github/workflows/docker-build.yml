name: Docker Build and Debug Test

on:
  # Haftada bir kez veya bir push olduğunda çalışacak
  schedule:
    - cron: '0 0 * * 1'  # Her Pazartesi 00:00 UTC'de çalışır
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/0x733/3xui-build/3x-ui:latest

      - name: Run Docker container for basic debugging
        id: run_container
        run: |
          container_id=$(docker run -d ghcr.io/0x733/3xui-build/3x-ui:latest) \
          && echo "Docker container çalıştırıldı!" \
          && echo "container_id=$container_id" >> $GITHUB_ENV \
          || echo "Docker container başlatılamadı. Hata ayıklama gerekebilir."
    
      - name: Save container state using Environment Files
        if: success()
        run: echo "container_state=running" >> $GITHUB_STATE

      - name: Set output for container status using Environment Files
        if: success()
        run: echo "container_output=success" >> $GITHUB_OUTPUT

      - name: Check if container starts properly
        run: |
          docker inspect --format='{{.State.Running}}' ${{ env.container_id }} \
          && echo "Container is running." \
          || echo "Container is not running."

      - name: List running Docker containers
        run: docker ps

      - name: Stop and remove the Docker container
        if: env.container_id
        run: |
          docker stop ${{ env.container_id }} \
          && docker rm ${{ env.container_id }}